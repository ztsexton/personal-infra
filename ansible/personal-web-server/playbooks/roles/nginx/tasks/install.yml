---
- name: Check if NGINX is installed
  command: dpkg-query -W nginx
  register: nginx_check
  failed_when: false
  changed_when: false

# Prerequisites are always needed for repository management
- name: Install prerequisites
  apt:
    name:
      - curl
      - gnupg2
      - ca-certificates
      - lsb-release
      - ubuntu-keyring
    state: present
    update_cache: yes

- name: Check if NGINX signing key exists
  stat:
    path: /usr/share/keyrings/nginx-archive-keyring.gpg
  register: nginx_key

- name: Download NGINX signing key
  get_url:
    url: https://nginx.org/keys/nginx_signing.key
    dest: /tmp/nginx_signing.key
    mode: '0644'
  when: not nginx_key.stat.exists

- name: Import NGINX signing key
  shell: cat /tmp/nginx_signing.key | gpg --dearmor > /usr/share/keyrings/nginx-archive-keyring.gpg
  args:
    creates: /usr/share/keyrings/nginx-archive-keyring.gpg
  when: not nginx_key.stat.exists

- name: Verify NGINX signing key
  command: gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg
  register: gpg_check
  changed_when: false
  failed_when: "'573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62' not in gpg_check.stdout"

- name: Add NGINX repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu {{ ansible_distribution_release }} nginx"
    filename: nginx
    state: present
    update_cache: no

- name: Configure NGINX repository pinning
  copy:
    dest: /etc/apt/preferences.d/99nginx
    content: |
      Package: *
      Pin: origin nginx.org
      Pin: release o=nginx
      Pin-Priority: 900
    mode: '0644'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install NGINX
  apt:
    name: nginx
    state: present

- name: Ensure doc roots exist
  file:
    path: "{{ item.root }}"
    state: directory
    owner: www-data
    group: www-data
    mode: "0755"
  loop: "{{ sites }}"