#cloud-config
package_update: true
package_upgrade: true
packages:
  - curl
  - ca-certificates
  - ufw
write_files:
  - path: /root/bootstrap.sh
    permissions: '0755'
    owner: root:root
    content: |
      #!/usr/bin/env bash
      set -euo pipefail
      echo "[bootstrap] Starting" | systemd-cat -t bootstrap -p info
      
      # Firewall
      ufw default deny incoming || true
      ufw default allow outgoing || true
      for p in 22 80 443 6443; do ufw allow $p/tcp || true; done
      echo 'y' | ufw enable || true

      # Install k3s (idempotent guard)
      if ! command -v k3s >/dev/null 2>&1; then
        export K3S_TOKEN="${k3s_token}"
        # Disable Traefik since we'll use Envoy via ArgoCD
        INSTALL_K3S_EXEC="server --disable traefik --write-kubeconfig-mode=644"
        echo "[bootstrap] Installing k3s with Traefik disabled for Envoy" | systemd-cat -t bootstrap -p info
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="$INSTALL_K3S_EXEC" sh -
      else
        echo "[bootstrap] k3s already installed; skipping" | systemd-cat -t bootstrap -p info
      fi

      # Ensure kubectl symlink exists
      if ! command -v kubectl >/dev/null 2>&1 && [ -x /usr/local/bin/k3s ]; then
        ln -s /usr/local/bin/k3s /usr/local/bin/kubectl || true
      fi

      # kubeconfig convenience
      mkdir -p /root/.kube
      cp /etc/rancher/k3s/k3s.yaml /root/.kube/config
      chmod 600 /root/.kube/config
      PUBIP=$(curl -s ifconfig.me || curl -s https://api.ipify.org || echo 127.0.0.1)
      sed -i "s/127.0.0.1/$PUBIP/" /root/.kube/config || true

      echo "[bootstrap] k3s installation complete. ArgoCD will be installed via Terraform." | systemd-cat -t bootstrap -p info
      echo "[bootstrap] Complete" | systemd-cat -t bootstrap -p info
runcmd:
  - /root/bootstrap.sh
